/*
 * This file is generated by jOOQ.
 */
package me.adibfarrasy.ktor.demo.generated.pojo.information_schema.tables.pojos


import java.io.Serializable

import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class InnodbBufferPageLruP(
    var poolId: ULong? = null,
    var lruPosition: ULong? = null,
    var space: ULong? = null,
    var pageNumber: ULong? = null,
    var pageType: String? = null,
    var flushType: ULong? = null,
    var fixCount: ULong? = null,
    @set:JvmName("setIsHashed")
    var isHashed: String? = null,
    var newestModification: ULong? = null,
    var oldestModification: ULong? = null,
    var accessTime: ULong? = null,
    var tableName: String? = null,
    var indexName: String? = null,
    var numberRecords: ULong? = null,
    var dataSize: ULong? = null,
    var compressedSize: ULong? = null,
    var compressed: String? = null,
    var ioFix: String? = null,
    @set:JvmName("setIsOld")
    var isOld: String? = null,
    var freePageClock: ULong? = null
): Serializable {


    override fun toString(): String {
        val sb = StringBuilder("InnodbBufferPageLruP (")

        sb.append(poolId)
        sb.append(", ").append(lruPosition)
        sb.append(", ").append(space)
        sb.append(", ").append(pageNumber)
        sb.append(", ").append(pageType)
        sb.append(", ").append(flushType)
        sb.append(", ").append(fixCount)
        sb.append(", ").append(isHashed)
        sb.append(", ").append(newestModification)
        sb.append(", ").append(oldestModification)
        sb.append(", ").append(accessTime)
        sb.append(", ").append(tableName)
        sb.append(", ").append(indexName)
        sb.append(", ").append(numberRecords)
        sb.append(", ").append(dataSize)
        sb.append(", ").append(compressedSize)
        sb.append(", ").append(compressed)
        sb.append(", ").append(ioFix)
        sb.append(", ").append(isOld)
        sb.append(", ").append(freePageClock)

        sb.append(")")
        return sb.toString()
    }
}
