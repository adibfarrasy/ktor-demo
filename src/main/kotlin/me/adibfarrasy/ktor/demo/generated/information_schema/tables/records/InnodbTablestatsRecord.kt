/*
 * This file is generated by jOOQ.
 */
package me.adibfarrasy.ktor.demo.generated.information_schema.tables.records


import me.adibfarrasy.ktor.demo.generated.information_schema.tables.InnodbTablestats

import org.jooq.Field
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbTablestatsRecord() : TableRecordImpl<InnodbTablestatsRecord>(InnodbTablestats.INNODB_TABLESTATS), Record9<ULong?, String?, String?, ULong?, ULong?, ULong?, ULong?, ULong?, Int?> {

    var tableId: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var statsInitialized: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var numRows: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    var clustIndexSize: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    var otherIndexSize: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    var modifiedCounter: ULong?
        set(value): Unit = set(6, value)
        get(): ULong? = get(6) as ULong?

    var autoinc: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    var refCount: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<ULong?, String?, String?, ULong?, ULong?, ULong?, ULong?, ULong?, Int?> = super.fieldsRow() as Row9<ULong?, String?, String?, ULong?, ULong?, ULong?, ULong?, ULong?, Int?>
    override fun valuesRow(): Row9<ULong?, String?, String?, ULong?, ULong?, ULong?, ULong?, ULong?, Int?> = super.valuesRow() as Row9<ULong?, String?, String?, ULong?, ULong?, ULong?, ULong?, ULong?, Int?>
    override fun field1(): Field<ULong?> = InnodbTablestats.INNODB_TABLESTATS.TABLE_ID
    override fun field2(): Field<String?> = InnodbTablestats.INNODB_TABLESTATS.NAME
    override fun field3(): Field<String?> = InnodbTablestats.INNODB_TABLESTATS.STATS_INITIALIZED
    override fun field4(): Field<ULong?> = InnodbTablestats.INNODB_TABLESTATS.NUM_ROWS
    override fun field5(): Field<ULong?> = InnodbTablestats.INNODB_TABLESTATS.CLUST_INDEX_SIZE
    override fun field6(): Field<ULong?> = InnodbTablestats.INNODB_TABLESTATS.OTHER_INDEX_SIZE
    override fun field7(): Field<ULong?> = InnodbTablestats.INNODB_TABLESTATS.MODIFIED_COUNTER
    override fun field8(): Field<ULong?> = InnodbTablestats.INNODB_TABLESTATS.AUTOINC
    override fun field9(): Field<Int?> = InnodbTablestats.INNODB_TABLESTATS.REF_COUNT
    override fun component1(): ULong? = tableId
    override fun component2(): String? = name
    override fun component3(): String? = statsInitialized
    override fun component4(): ULong? = numRows
    override fun component5(): ULong? = clustIndexSize
    override fun component6(): ULong? = otherIndexSize
    override fun component7(): ULong? = modifiedCounter
    override fun component8(): ULong? = autoinc
    override fun component9(): Int? = refCount
    override fun value1(): ULong? = tableId
    override fun value2(): String? = name
    override fun value3(): String? = statsInitialized
    override fun value4(): ULong? = numRows
    override fun value5(): ULong? = clustIndexSize
    override fun value6(): ULong? = otherIndexSize
    override fun value7(): ULong? = modifiedCounter
    override fun value8(): ULong? = autoinc
    override fun value9(): Int? = refCount

    override fun value1(value: ULong?): InnodbTablestatsRecord {
        this.tableId = value
        return this
    }

    override fun value2(value: String?): InnodbTablestatsRecord {
        this.name = value
        return this
    }

    override fun value3(value: String?): InnodbTablestatsRecord {
        this.statsInitialized = value
        return this
    }

    override fun value4(value: ULong?): InnodbTablestatsRecord {
        this.numRows = value
        return this
    }

    override fun value5(value: ULong?): InnodbTablestatsRecord {
        this.clustIndexSize = value
        return this
    }

    override fun value6(value: ULong?): InnodbTablestatsRecord {
        this.otherIndexSize = value
        return this
    }

    override fun value7(value: ULong?): InnodbTablestatsRecord {
        this.modifiedCounter = value
        return this
    }

    override fun value8(value: ULong?): InnodbTablestatsRecord {
        this.autoinc = value
        return this
    }

    override fun value9(value: Int?): InnodbTablestatsRecord {
        this.refCount = value
        return this
    }

    override fun values(value1: ULong?, value2: String?, value3: String?, value4: ULong?, value5: ULong?, value6: ULong?, value7: ULong?, value8: ULong?, value9: Int?): InnodbTablestatsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised InnodbTablestatsRecord
     */
    constructor(tableId: ULong? = null, name: String? = null, statsInitialized: String? = null, numRows: ULong? = null, clustIndexSize: ULong? = null, otherIndexSize: ULong? = null, modifiedCounter: ULong? = null, autoinc: ULong? = null, refCount: Int? = null): this() {
        this.tableId = tableId
        this.name = name
        this.statsInitialized = statsInitialized
        this.numRows = numRows
        this.clustIndexSize = clustIndexSize
        this.otherIndexSize = otherIndexSize
        this.modifiedCounter = modifiedCounter
        this.autoinc = autoinc
        this.refCount = refCount
    }
}
