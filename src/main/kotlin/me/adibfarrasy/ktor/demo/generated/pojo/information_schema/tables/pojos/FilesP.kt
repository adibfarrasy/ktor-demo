/*
 * This file is generated by jOOQ.
 */
package me.adibfarrasy.ktor.demo.generated.pojo.information_schema.tables.pojos


import java.io.Serializable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class FilesP(
    var fileId: Long? = null,
    var fileName: String? = null,
    var fileType: String? = null,
    var tablespaceName: String? = null,
    var tableCatalog: String? = null,
    var tableSchema: ByteArray? = null,
    var tableName: ByteArray? = null,
    var logfileGroupName: String? = null,
    var logfileGroupNumber: Long? = null,
    var engine: String? = null,
    var fulltextKeys: ByteArray? = null,
    var deletedRows: ByteArray? = null,
    var updateCount: ByteArray? = null,
    var freeExtents: Long? = null,
    var totalExtents: Long? = null,
    var extentSize: Long? = null,
    var initialSize: Long? = null,
    var maximumSize: Long? = null,
    var autoextendSize: Long? = null,
    var creationTime: ByteArray? = null,
    var lastUpdateTime: ByteArray? = null,
    var lastAccessTime: ByteArray? = null,
    var recoverTime: ByteArray? = null,
    var transactionCounter: ByteArray? = null,
    var version: Long? = null,
    var rowFormat: String? = null,
    var tableRows: ByteArray? = null,
    var avgRowLength: ByteArray? = null,
    var dataLength: ByteArray? = null,
    var maxDataLength: ByteArray? = null,
    var indexLength: ByteArray? = null,
    var dataFree: Long? = null,
    var createTime: ByteArray? = null,
    var updateTime: ByteArray? = null,
    var checkTime: ByteArray? = null,
    var checksum: ByteArray? = null,
    var status: String? = null,
    var extra: String? = null
): Serializable {


    override fun toString(): String {
        val sb = StringBuilder("FilesP (")

        sb.append(fileId)
        sb.append(", ").append(fileName)
        sb.append(", ").append(fileType)
        sb.append(", ").append(tablespaceName)
        sb.append(", ").append(tableCatalog)
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append(logfileGroupName)
        sb.append(", ").append(logfileGroupNumber)
        sb.append(", ").append(engine)
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append(freeExtents)
        sb.append(", ").append(totalExtents)
        sb.append(", ").append(extentSize)
        sb.append(", ").append(initialSize)
        sb.append(", ").append(maximumSize)
        sb.append(", ").append(autoextendSize)
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append(version)
        sb.append(", ").append(rowFormat)
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append(dataFree)
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append("[binary...]")
        sb.append(", ").append(status)
        sb.append(", ").append(extra)

        sb.append(")")
        return sb.toString()
    }
}
