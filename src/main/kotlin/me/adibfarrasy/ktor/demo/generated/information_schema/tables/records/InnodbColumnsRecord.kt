/*
 * This file is generated by jOOQ.
 */
package me.adibfarrasy.ktor.demo.generated.information_schema.tables.records


import me.adibfarrasy.ktor.demo.generated.information_schema.tables.InnodbColumns

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbColumnsRecord() : TableRecordImpl<InnodbColumnsRecord>(InnodbColumns.INNODB_COLUMNS), Record8<ULong?, String?, ULong?, Int?, Int?, Int?, Int?, String?> {

    var tableId: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var pos: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    var mtype: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    var prtype: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    var len: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    var hasDefault: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    var defaultValue: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<ULong?, String?, ULong?, Int?, Int?, Int?, Int?, String?> = super.fieldsRow() as Row8<ULong?, String?, ULong?, Int?, Int?, Int?, Int?, String?>
    override fun valuesRow(): Row8<ULong?, String?, ULong?, Int?, Int?, Int?, Int?, String?> = super.valuesRow() as Row8<ULong?, String?, ULong?, Int?, Int?, Int?, Int?, String?>
    override fun field1(): Field<ULong?> = InnodbColumns.INNODB_COLUMNS.TABLE_ID
    override fun field2(): Field<String?> = InnodbColumns.INNODB_COLUMNS.NAME
    override fun field3(): Field<ULong?> = InnodbColumns.INNODB_COLUMNS.POS
    override fun field4(): Field<Int?> = InnodbColumns.INNODB_COLUMNS.MTYPE
    override fun field5(): Field<Int?> = InnodbColumns.INNODB_COLUMNS.PRTYPE
    override fun field6(): Field<Int?> = InnodbColumns.INNODB_COLUMNS.LEN
    override fun field7(): Field<Int?> = InnodbColumns.INNODB_COLUMNS.HAS_DEFAULT
    override fun field8(): Field<String?> = InnodbColumns.INNODB_COLUMNS.DEFAULT_VALUE
    override fun component1(): ULong? = tableId
    override fun component2(): String? = name
    override fun component3(): ULong? = pos
    override fun component4(): Int? = mtype
    override fun component5(): Int? = prtype
    override fun component6(): Int? = len
    override fun component7(): Int? = hasDefault
    override fun component8(): String? = defaultValue
    override fun value1(): ULong? = tableId
    override fun value2(): String? = name
    override fun value3(): ULong? = pos
    override fun value4(): Int? = mtype
    override fun value5(): Int? = prtype
    override fun value6(): Int? = len
    override fun value7(): Int? = hasDefault
    override fun value8(): String? = defaultValue

    override fun value1(value: ULong?): InnodbColumnsRecord {
        this.tableId = value
        return this
    }

    override fun value2(value: String?): InnodbColumnsRecord {
        this.name = value
        return this
    }

    override fun value3(value: ULong?): InnodbColumnsRecord {
        this.pos = value
        return this
    }

    override fun value4(value: Int?): InnodbColumnsRecord {
        this.mtype = value
        return this
    }

    override fun value5(value: Int?): InnodbColumnsRecord {
        this.prtype = value
        return this
    }

    override fun value6(value: Int?): InnodbColumnsRecord {
        this.len = value
        return this
    }

    override fun value7(value: Int?): InnodbColumnsRecord {
        this.hasDefault = value
        return this
    }

    override fun value8(value: String?): InnodbColumnsRecord {
        this.defaultValue = value
        return this
    }

    override fun values(value1: ULong?, value2: String?, value3: ULong?, value4: Int?, value5: Int?, value6: Int?, value7: Int?, value8: String?): InnodbColumnsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised InnodbColumnsRecord
     */
    constructor(tableId: ULong? = null, name: String? = null, pos: ULong? = null, mtype: Int? = null, prtype: Int? = null, len: Int? = null, hasDefault: Int? = null, defaultValue: String? = null): this() {
        this.tableId = tableId
        this.name = name
        this.pos = pos
        this.mtype = mtype
        this.prtype = prtype
        this.len = len
        this.hasDefault = hasDefault
        this.defaultValue = defaultValue
    }
}
