/*
 * This file is generated by jOOQ.
 */
package me.adibfarrasy.ktor.demo.generated.information_schema.tables.records


import me.adibfarrasy.ktor.demo.generated.information_schema.tables.InnodbFtConfig

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbFtConfigRecord() : TableRecordImpl<InnodbFtConfigRecord>(InnodbFtConfig.INNODB_FT_CONFIG), Record2<String?, String?> {

    var key: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    var value: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<String?, String?> = super.fieldsRow() as Row2<String?, String?>
    override fun valuesRow(): Row2<String?, String?> = super.valuesRow() as Row2<String?, String?>
    override fun field1(): Field<String?> = InnodbFtConfig.INNODB_FT_CONFIG.KEY
    override fun field2(): Field<String?> = InnodbFtConfig.INNODB_FT_CONFIG.VALUE
    override fun component1(): String? = key
    override fun component2(): String? = value
    override fun value1(): String? = key
    override fun value2(): String? = value

    override fun value1(value: String?): InnodbFtConfigRecord {
        this.key = value
        return this
    }

    override fun value2(value: String?): InnodbFtConfigRecord {
        this.value = value
        return this
    }

    override fun values(value1: String?, value2: String?): InnodbFtConfigRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised InnodbFtConfigRecord
     */
    constructor(key: String? = null, value: String? = null): this() {
        this.key = key
        this.value = value
    }
}
